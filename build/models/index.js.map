{"version":3,"sources":["../../models/index.js"],"names":["basename","path","__filename","env","process","NODE_ENV","config","databaseConfig","db","sequelize","Sequelize","url","fs","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAWC,eAAKD,QAAL,CAAcE,UAAd,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAxB;AACA,IAAMC,SAASC,iBAAeJ,GAAf,CAAf;;AAEA,IAAMK,KAAK,EAAX;;AAEA,IAAMC,YAAY,IAAIC,mBAAJ,CAAcJ,OAAOK,GAArB,EAA0BL,MAA1B,CAAlB;;AAEAM,aACGC,WADH,CACeC,SADf,EAC0BC,MAD1B,CACiC;AAAA,SAASC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAClCD,SAAShB,QADyB,IACXgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KADhB;AAAA,CADjC,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQX,UAAUY,MAAV,CAAiBpB,eAAKqB,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAR,KAAGY,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CANH;;AAQAI,OAAOC,IAAP,CAAYjB,EAAZ,EAAgBW,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAIlB,GAAGkB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BnB,OAAGkB,SAAH,EAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGE,SAAH,GAAeA,mBAAf;;AAEAkB,OAAOC,OAAP,GAAiBrB,EAAjB","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport databaseConfig from '../config/config';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV;\nconst config = databaseConfig[env];\n\nconst db = {};\n\nconst sequelize = new Sequelize(config.url, config);\n\nfs\n  .readdirSync(__dirname).filter(file => (file.indexOf('.') !== 0)\n   && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}