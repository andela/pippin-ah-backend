{"version":3,"sources":["../../models/user.js"],"names":["module","exports","sequelize","DataTypes","User","define","username","type","STRING","allowNull","unique","email","password","isMentor","BOOLEAN","defaultValue","hooks","beforeCreate","user","hashPassword","associate","models","hasOne","Profile","foreignKey","onDelete","hasMany","Report","prototype","saltRounds","bcrypt","hash","validPassword","compare"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,cAAU;AACRC,YAAMJ,UAAUK,MADR;AAERC,iBAAW,KAFH;AAGRC,cAAQ;;AAHA,KAD0B;AAOpCC,WAAO;AACLJ,YAAMJ,UAAUK,MADX;AAELC,iBAAW,KAFN;AAGLC,cAAQ;AAHH,KAP6B;AAYpCE,cAAU;AACRL,YAAMJ,UAAUK,MADR;AAERC,iBAAW;;AAFH,KAZ0B;AAiBpCI,cAAU;AACRN,YAAMJ,UAAUW,OADR;AAERC,oBAAc;AAFN;AAjB0B,GAAzB,EAqBV;AACDC,WAAO;AACLC;AAAA,4FAAc,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACNA,KAAKC,YAAL,EADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADK;AADN,GArBU,CAAb;;AA8BAf,OAAKgB,SAAL,GAAiB,UAACC,MAAD,EAAY;AAC3BjB,SAAKkB,MAAL,CAAYD,OAAOE,OAAnB,EAA4B;AAC1BC,kBAAY,QADc;AAE1BC,gBAAU;AAFgB,KAA5B;;AAKArB,SAAKsB,OAAL,CAAaL,OAAOM,MAApB,EAA4B;AAC1BH,kBAAY,QADc;AAE1BC,gBAAU;AAFgB,KAA5B;AAID,GAVD;;AAYArB,OAAKwB,SAAL,CAAeT,YAAf;AAAA,yFAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBU,wBADsB,GACT,EADS;AAAA;AAAA,qBAENC,iBAAOC,IAAP,CAAY,KAAKnB,QAAjB,EAA2BiB,UAA3B,CAFM;;AAAA;AAE5B,mBAAKjB,QAFuB;AAAA,gDAGrB,KAAKA,QAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B;;AAAA,aAA6CO,YAA7C;AAAA;AAAA;;AAAA,WAA6CA,YAA7C;AAAA;;AAMAf,OAAKwB,SAAL,CAAeI,aAAf,GAA+B,SAASA,aAAT,CAAuBpB,QAAvB,EAAiC;AAC9D,WAAOkB,iBAAOG,OAAP,CAAerB,QAAf,EAAyB,KAAKA,QAA9B,CAAP;AACD,GAFD;;AAIA,SAAOR,IAAP;AACD,CAtDD","file":"user.js","sourcesContent":["import bcrypt from 'bcrypt';\n\nmodule.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    username: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      unique: true\n\n    },\n    email: {\n      type: DataTypes.STRING,\n      allowNull: false,\n      unique: true\n    },\n    password: {\n      type: DataTypes.STRING,\n      allowNull: false\n\n    },\n    isMentor: {\n      type: DataTypes.BOOLEAN,\n      defaultValue: false\n    },\n  }, {\n    hooks: {\n      beforeCreate: async (user) => {\n        await user.hashPassword();\n      }\n    }\n  }\n  );\n\n  User.associate = (models) => {\n    User.hasOne(models.Profile, {\n      foreignKey: 'userId',\n      onDelete: 'CASCADE'\n    });\n\n    User.hasMany(models.Report, {\n      foreignKey: 'userId',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  User.prototype.hashPassword = async function hashPassword() {\n    const saltRounds = 10;\n    this.password = await bcrypt.hash(this.password, saltRounds);\n    return this.password;\n  };\n\n  User.prototype.validPassword = function validPassword(password) {\n    return bcrypt.compare(password, this.password);\n  };\n\n  return User;\n};\n"]}